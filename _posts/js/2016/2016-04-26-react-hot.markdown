---
layout: post
title:  webpack + react-hot的安装及使用
date: 2016-04-26 22:36:10 +0800
categories: js
uid: 1461681373
---
## 一. 安装依赖

{% highlight bash %}
# webpack的包有个特点, 都是-loader 结尾
npm install --save-dev react-hot-loader
# 由于react-hot 是基于webpack server的, 所以下面的也要装
npm install --save-dev webpack-dev-server
{% endhighlight %}

<br>

## 二. 配置参数

首先需要在根目录放一个**server.js**, 内容可以参照官方的
[官方server.js](https://github.com/gaearon/react-hot-boilerplate/blob/master/server.js)

{% highlight js %}
var webpack = require('webpack');
var WebpackDevServer = require('webpack-dev-server');
var config = require('./webpack.config');

new WebpackDevServer(webpack(config), {
  publicPath: config.output.publicPath,
  hot: true,
  historyApiFallback: true
}).listen(3000, 'localhost', function (err, result) {
  if (err) {
    return console.log(err);
  }

  console.log('Listening at http://localhost:3000/');
});
{% endhighlight %}

<br>

其次修改你的**webpack.config.js**
{% highlight js hl_lines="5 6 10 11 16 22" %}
var webpack = require('webpack');

module.exports = {
  entry: [
  'webpack-dev-server/client?http://127.0.0.1:3000', // WebpackDevServer host and port
  'webpack/hot/only-dev-server', // "only" prevents reload on syntax errors
  "./src/app.js"
  ],
  output: {
    path: __dirname,  //这里要特别注意要加上绝对路径, 否则server.js会启动不起来, 会报"invalid path"的错误
    publicPath: '/build/',
    filename: "bundle.js" //这里我之前写的是 /build/bundle.js, 这会引发一些混淆视听的问题
  },
  module: {
    loaders: [
      { test: /\.js$/,  loaders: ["react-hot", "babel-loader"]} //注意这里是loaders, react-hot要在最前面
    ]
  },
  resolve: {
    extensions: ['', '.js', '.jsx']
  },
  plugins: [new webpack.HotModuleReplacementPlugin()]  //这里也别漏了
};
{% endhighlight %}

<br>

## <del>三. 使用</del>
<del>启动两个**cmd**吧, 一个为**npm**, 一个为**webpack** </del>
{% highlight bash hl_lines="2 6" %}
# 启动我们的http服务
npm server.js

# 这个是不能少的, 一开始我以为只要启动http就行了, 结果死活不替换, 后来才知道下面这个还是不能省
# webpack -w 本身就是实时打包的了, 据说配合react-hot会加快速度(我没验证能加速多少), 因为react-hot只替换更改的部分
webpack -w
{% endhighlight %}

<br>

### 三. 使用(上面那个方法不对)
我就奇怪为什么 **webpack -w**已经是实时打包了, 那**react-hot**作用不就很小吗, 怎么能火的一谈糊涂, 

而且官方文档并没有说要运行**webpack**啊, 能称为**利器**肯定能舍弃**webpack**的

一定是哪里弄错了, 可恶的是也不报哪里出错了, 为啥就是不能实时更新呢?

<br>

实验了很多次后终于发现原因了, 原因就是 **页面并没有加载到实时更新的文件!!!**

为什么会这样呢? 因为 **output** 里的文件是真实存在的, 这很容易跟页面需要加载的文件混淆.

其实我们生成的**bundle.js**并不在文件夹下, 你在根文件夹下是找不到那个实时生成的**bundle**文件的.

<br>

由于我的**output** 之前设置的是 **publicPath: '/build/', filename: "/build/bundle.js"**, 
因此我真正要加载的文件是 **src="/build/build/bundle.js"**

但是我根目录下有**webpack**生成的**/build/bundle.js**这个文件, 导致我这种新手很容易认为页面要加载这个文件, 因此写成了**src="/build/bundle.js"**, 所以我刷到死他也不更新!!!!

<br>

{% highlight bash hl_lines="5 3 4 9" %}
//webpack.config.js
output: {
  path: __dirname,  //这三步单独拿出来, 注意配置一定要跟页面相符合, 
  publicPath: '/build/',
  filename: "bundle.js"
},

//html
<script src="build/bundle.js"></script>

//别忘了启动我们http服务 npm server.js

{% endhighlight %}


<br>

这里可以自己验证下, **build**文件夹下新建两个文件 **bundle.js**, **test.js**, 内容随意.
同时页面添加**`<script src="build/test.js"></script>`**

你会发现只有**test.js**生效了

<br>

有疑问还是得去验证啊, 不然又稀里糊涂了.

<br>


参考资料
[react hot doc](http://gaearon.github.io/react-hot-loader/getstarted/)
